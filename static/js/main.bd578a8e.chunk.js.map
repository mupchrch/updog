{"version":3,"sources":["reducers/dogs.js","reducers/index.js","components/Dog.js","components/Board.js","components/App.js","actions/index.js","serviceWorker.js","index.js"],"names":["factors","number","Object","toConsumableArray","Array","keys","filter","i","dogs","state","arguments","length","undefined","numColumns","numRows","dogsPerMatch","possibleDogsPerMatch","action","type","duplicateDogs","concat","array","j","Math","floor","random","_ref","shuffleArray","map","dog","id","url","isSelected","isMatched","objectSpread","findIndex","item","newDogs","every","arr","potentialMatches","forEach","includes","combineReducers","gameInfo","Dog","onDogSelect","style","opacity","outline","cursor","backgroundImage","react_default","a","createElement","disabled","className","onClick","onDragStart","e","preventDefault","Board","props","objectWithoutProperties","gridTemplateColumns","components_Dog","assign","key","connect","isGameWon","dispatch","initDogs","numDogs","toggleDog","onReplay","setGrid","setDogsPerMatch","numMatches","useEffect","fetch","then","response","json","message","value","onChange","target","val","components_Board","hidden","Boolean","window","location","hostname","match","store","compose","devToolsExtension","f","createStore","finalCreateStore","rootReducer","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd578a8e.chunk.js","sourcesContent":["// https://stackoverflow.com/a/12646864\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\n// https://stackoverflow.com/a/43802308\nconst factors = number => [...Array(number + 1).keys()]\n  .filter(i => number % i === 0);\n\nconst dogs = (state = { numColumns: 4, numRows: 4, dogsPerMatch: 2, possibleDogsPerMatch: factors(16), dogs: [] }, action) => {\n  switch (action.type) {\n    case 'INIT_DOGS':\n      let duplicateDogs = [];\n      for (let i=0; i<state.dogsPerMatch; i++) {\n        duplicateDogs = [...duplicateDogs, ...action.dogs];\n      }\n\n      shuffleArray(duplicateDogs);\n\n      const dogs = duplicateDogs.map((dog, i) => {\n        return {\n          id: i,\n          url: dog,\n          isSelected: false,\n          isMatched: false\n        };\n      });\n\n      return {\n        ...state,\n        dogs\n      };\n    case 'TOGGLE_DOG':\n      const i = state.dogs.findIndex(item => item.id === action.id);\n      const newDogs = [...state.dogs];\n      newDogs[i].isSelected = !newDogs[i].isSelected;\n\n      // check match\n      if (newDogs[i].isSelected) {\n        // see if currently selected items match\n        const isValidMatch = newDogs.filter(item => item.isSelected).every((item, i, arr) => item.url === arr[0].url);\n\n        if (isValidMatch) {\n          // check if they're all selected\n          const potentialMatches = newDogs.filter(item => item.url === newDogs[i].url);\n          const isCompleteMatch = potentialMatches.every(item => item.isSelected);\n\n          if (isCompleteMatch) {\n            // clear selections and flag as matched\n            potentialMatches.forEach(item => {\n              item.isMatched = true;\n              item.isSelected = false;\n            });\n          }\n        } else {\n          // clear out all selections\n          newDogs.forEach(item => item.isSelected = false);\n        }\n      }\n\n      return { ...state, dogs: newDogs };\n    case 'CLEAR_DOGS':\n      return { ...state, dogs: [] };\n    case 'SET_GRID':\n      const possibleDogsPerMatch = factors(action.numColumns * action.numRows);\n      let dogsPerMatch = state.dogsPerMatch;\n      if (!possibleDogsPerMatch.includes(dogsPerMatch)) {\n        dogsPerMatch = possibleDogsPerMatch[0];\n      }\n    \n      return {\n        ...state,\n        numColumns: action.numColumns,\n        numRows: action.numRows,\n        possibleDogsPerMatch,\n        dogsPerMatch\n      }\n    case 'SET_DOGS_PER_MATCH':\n      return {\n        ...state,\n        dogsPerMatch: action.dogsPerMatch\n      }\n    default:\n      return state;\n  }\n}\n\nexport default dogs;","import { combineReducers } from 'redux';\nimport dogs from './dogs';\n\nexport default combineReducers({\n  gameInfo: dogs\n});","import React from 'react';\nimport './Dog.css';\n\nfunction Dog({ id, url, isSelected, isMatched, onDogSelect }) {\n  const style = {\n    opacity: isSelected || isMatched ? 0.5 : 1,\n    outline: isSelected ? '5px solid black' : null,\n    filter: isMatched ? 'blur(5px)' : null,\n    cursor: isMatched ? null : 'pointer',\n    backgroundImage: `url(${url})`\n  };\n\n  return (\n    <button\n      disabled={isMatched}\n      className='dog'\n      style={style}\n      onClick={() => onDogSelect(id)}\n      onDragStart={e => e.preventDefault()}\n    />\n  );\n}\n\nexport default Dog;\n","import React from 'react';\nimport Dog from './Dog';\nimport './Board.css';\n\nfunction Board({ dogs, numColumns, ...props }) {\n  return (\n    <div className='board' style={{ gridTemplateColumns: `repeat(${numColumns}, 1fr)` }}>\n      {\n        dogs.map((dog) =>\n          <Dog\n            key={dog.id}\n            id={dog.id}\n            url={dog.url}\n            isSelected={dog.isSelected}\n            isMatched={dog.isMatched}\n            {...props}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default Board;","import React, { useEffect } from 'react';\nimport Board from './Board';\nimport { initDogs, toggleDog, clearDogs, setGrid, setDogsPerMatch } from '../actions';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nfunction App({ initDogs, setGrid, setDogsPerMatch, onReplay, dogs, numColumns, numRows, dogsPerMatch, possibleDogsPerMatch, isGameWon, ...props }) {\n  const numMatches = dogs.filter(dog => dog.isMatched).length / dogsPerMatch;\n\n  useEffect(() => {\n    if (!isGameWon) {\n      const numDogs = (numColumns * numRows) / dogsPerMatch;\n\n      fetch('https://dog.ceo/api/breeds/image/random/' + numDogs)\n        .then(response => response.json())\n        .then(json => initDogs(json.message));\n    }\n  }, [dogsPerMatch, numColumns, numRows, isGameWon]);\n\n  function handleNumColumns(e) {\n    setGrid(e.target.value, numRows);\n  }\n\n  function handleNumRows(e) {\n    setGrid(numColumns, e.target.value);\n  }\n\n  function handleDogsPerMatch(e) {\n    setDogsPerMatch(e.target.value);\n  }\n\n  return (\n    <div className='App'>\n      <div className='input-header'>\n        <fieldset>\n          <legend>Board size:</legend>\n          <select value={numColumns} onChange={handleNumColumns}>\n            {[...Array(10).keys()].map(i => <option key={i+1} value={i+1}>{i+1}</option>)}\n          </select>\n          x\n          <select value={numRows} onChange={handleNumRows}>\n            {[...Array(10).keys()].map(i => <option key={i+1} value={i+1}>{i+1}</option>)}\n          </select>\n        </fieldset>\n        <label>Amount per match:\n          <select id='dogsPerMatch' value={dogsPerMatch} onChange={handleDogsPerMatch}>\n            {\n              possibleDogsPerMatch.map(val =>\n                <option key={val} value={val}>{val}</option>\n              )\n            }\n          </select>\n        </label>\n        <div>Matches: {numMatches} / {dogs.length/dogsPerMatch}</div>\n      </div>\n      <Board dogs={dogs} numColumns={numColumns} {...props} />\n      <div className='winner' hidden={!isGameWon}>\n        <div>YOU WIN</div>\n        <button onClick={() => onReplay()}>play again?</button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isGameWon: state.gameInfo.dogs && state.gameInfo.dogs.length > 0 ? state.gameInfo.dogs.every(dog => dog.isMatched) : false,\n  dogs: state.gameInfo.dogs,\n  numColumns: state.gameInfo.numColumns,\n  numRows: state.gameInfo.numRows,\n  dogsPerMatch: state.gameInfo.dogsPerMatch,\n  possibleDogsPerMatch: state.gameInfo.possibleDogsPerMatch\n});\nconst mapDispatchToProps = (dispatch) => ({\n  initDogs: (dogs, dogsPerMatch, numDogs) => dispatch(initDogs(dogs, dogsPerMatch, numDogs)),\n  onDogSelect: id => dispatch(toggleDog(id)),\n  onReplay: () => dispatch(clearDogs()),\n  setGrid: (numColumns, numRows) => dispatch(setGrid(numColumns, numRows)),\n  setDogsPerMatch: dogsPerMatch => dispatch(setDogsPerMatch(dogsPerMatch))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const initDogs = dogs => ({\n  type: 'INIT_DOGS',\n  dogs\n});\n\nexport const toggleDog = id => ({\n  type: 'TOGGLE_DOG',\n  id\n});\n\nexport const clearDogs = () => ({\n  type: 'CLEAR_DOGS'\n});\n\nexport const setGrid = (numColumns, numRows) => ({\n  type: 'SET_GRID',\n  numColumns,\n  numRows\n});\n\nexport const setDogsPerMatch = dogsPerMatch => ({\n  type: 'SET_DOGS_PER_MATCH',\n  dogsPerMatch\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, compose } from 'redux'\nimport rootReducer from './reducers'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst finalCreateStore = compose(\n  window.devToolsExtension ? window.devToolsExtension() : f => f\n)(createStore)\n\nconst store = finalCreateStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}